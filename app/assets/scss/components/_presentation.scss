@use "../theme/typography";

:root {
	--transition-duration: 0.3s;
}

::view-transition-group(*) {
	animation-duration: var(--transition-duration);
}

.presentation {
	display: grid;
	justify-content: center;

	aspect-ratio: 16 / 9;
	height: 100dvh;
	position: relative;

	&::before {
		content: attr(data-slide-number);
		@include typography.base-small;

		position: absolute;
		bottom: 1rem;
		right: 1rem;
	}

	> progress {
		appearance: none;

		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 0.5em;

		view-transition-name: progress;

		&::-webkit-progress-bar {
			background: 0;
		}
		&::-webkit-progress-value {
			background: currentColor;
			opacity: 0.2;
			transition: width var(--transition-duration);
		}
	}
}

::view-transition-group(progress) { animation-duration: 0s; }

.presentation:not(.hydrated) {
	overflow: auto;
	scroll-snap-type: y mandatory;
	> .slide {
		scroll-snap-align: start;
	}
}

.presentation.hydrated {
	margin: auto;
	overflow: hidden;
	place-content: center;
	> .slide {
		grid-area: 1 / 1;
		&:not([aria-current]) {
			display: none;
		}
	}
}

.slide {
	aspect-ratio: 16 / 9;
	height: 100dvh;

	display: grid;
	gap: 2rem;
	position: relative;
	overflow: hidden;

	padding: 4rem;

	&.slide--title {
		grid-template-areas: "title";
		place-content: center;
		.title {
			@include typography.heading-large;
		}
	}
	&.slide--text {
		grid-template-areas:
			"title"
			"text";
		grid-template-rows: auto 1fr;
	}
	&.slide--media {
		grid-template-areas:
			"title"
			"text"
			"media"
			".";
		grid-template-rows: auto auto auto 1fr;
	}
	&.slide--media-left {
		grid-template-areas:
			"title title"
			"media text";
		grid-template-rows: auto 1fr;
		grid-template-columns: repeat(2, 50%);
	}
	&.slide--media-right {
		grid-template-areas:
			"title title"
			"text media";
		grid-template-rows: auto 1fr;
		grid-template-columns: repeat(2, 50%);
	}
	&.slide--media-double {
		grid-template-areas:
			"title"
			"media"
			"media-2"
			".";
		grid-template-rows: auto auto auto 1fr;

		.media + .media {
			grid-area: media-2;
		}
	}

	.title {
		grid-area: title;

		@include typography.heading;
	}
	.text {
		grid-area: text;

		p + p {
			margin-top: 1em;
		}

		:where(ul, ol) {
			li + li {
				margin-top: 0.5em;
			}
		}
	}
	.media {
		grid-area: media;
	}

	@include typography.base;

	code {
		display: block;
		white-space: pre;
		tab-size: 4;

		@include typography.mono;

		background: rgba(white, 0.1);
		padding: 0.2em;
		border-radius: 0.2em;
	}

	&:where(.transitioning-in, .transitioning-out) {
		view-transition-name: slide;
	}

	&:where(.transitioning-in[data-transition-in-parts], .transitioning-out[data-transition-out-parts]) {
		.title {
			view-transition-name: slide-title;
		}
		.text {
			view-transition-name: slide-text;
		}
		.media {
			view-transition-name: slide-media;
		}
	}
}

// Transitioning rules
@keyframes slide-to-right {
	to {
		transform: translateX(100%);
		opacity: 0;
	}
}

@keyframes slide-from-left {
	from {
		transform: translateX(-100%);
		opacity: 0;
	}
}

:root:has(:where(.transitioning-in[data-transition-in-speed="slow"], .transitioning-out[data-transition-out-speed="slow"])) {
	--transition-duration: 5s;
}

:root:has(:where(.transitioning-in[data-transition-in-speed="snap"], .transitioning-out[data-transition-out-speed="snap"])) {
	--transition-duration: 0s;
}

:has(.transitioning-out[data-transition-out="slide-to-right"])::view-transition-old(slide) {
	animation: slide-to-right var(--transition-duration) ease-in-out;
}

:has(.transitioning-out .text[data-transition-out="slide-to-right"])::view-transition-old(slide-text) {
	animation: slide-to-right var(--transition-duration) ease-in-out;
}

:has(.transitioning-in[data-transition-in="slide-from-left"])::view-transition-new(slide) {
	animation: slide-from-left var(--transition-duration) ease-in-out;
}

:has(.transitioning-in .text[data-transition-in="slide-from-left"])::view-transition-new(slide-text) {
	animation: slide-from-left var(--transition-duration) ease-in-out;
}
